---
name: pre-commit

on:
  workflow_call:
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
      TFC_API_TOKEN:
        required: true

jobs:
  code_review:
    name: "PR Code Review"
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Checkout Repo's"

      - name: Checkout Workflow Files
        uses: actions/checkout@v2
        with:
          repository: twallac10/firewall_workflows
          path: tmp

      - name: Checkout TF Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Git config
        run: |
          git config --global user.email "terence.wallace@gmail.com"
          git config --global user.name "Github Test"

      - run: |
          echo "Install Tools"

      - uses: actions/setup-python@v2

      - name: Install tflint
        working-directory: /tmp
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Install Checkov
        run: |
          python -m pip install checkov

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}

      - name: Terraform Set workspace
        id: workspace
        run: |
          WKSP=$(cat deployment.yml | yq .workspace)
          terraform workspace list
          echo -e "terraform {\n  cloud {\n    organization = \"bgp-summary-test\"\n\n    workspaces {\n      name = \"${WKSP}\"\n    }\n  }\n}\n" > workspace.tf
          cat workspace.tf

      - run: |
          echo "Start Validation"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        continue-on-error: true

      - name: Terraform Validate
        if: steps.init.outcome == 'success'
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

      - name: Checkov
        id: checkov
        if: steps.validate.outcome == 'success'
        run: checkov -d ./

      - name: Terraform Plan
        id: plan
        if: steps.checkov.outcome == 'success'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \n
            \`\`\`\n\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
